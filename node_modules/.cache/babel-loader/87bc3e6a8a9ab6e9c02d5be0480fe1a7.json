{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/getinfo/projects/React/boilerplate/src/components/ThemeSwitcher/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, SwitchButton, Label } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { changeToDark, changeToLight } from '../../store/Theme/Theme.actions';\n\nconst ThemeSwitcher = () => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(true);\n  const dispatch = useDispatch();\n\n  const handleThemeChange = event => {\n    setIsChecked(!isChecked);\n    event ? dispatch(changeToDark()) : dispatch(changeToLight());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n      checked: isChecked,\n      uncheckedIcon: false,\n      checkedIcon: false,\n      onChange: handleThemeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeSwitcher, \"1tz1Y8y4DMDJQgw/tVQ4eZ0MJyM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/home/getinfo/projects/React/boilerplate/src/components/ThemeSwitcher/index.tsx"],"names":["React","useState","Container","SwitchButton","Label","useDispatch","changeToDark","changeToLight","ThemeSwitcher","isChecked","setIsChecked","dispatch","handleThemeChange","event"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAiCC,KAAjC,QAA8C,UAA9C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,iCAA5C;;AAEA,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMU,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,iBAAiB,GAAIC,KAAD,IAAmB;AAC3CH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAI,IAAAA,KAAK,GAAGF,QAAQ,CAACL,YAAY,EAAb,CAAX,GAA8BK,QAAQ,CAACJ,aAAa,EAAd,CAA3C;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,SAAvB;AAAkC,MAAA,aAAa,EAAE,KAAjD;AAAwD,MAAA,WAAW,EAAE,KAArE;AAA4E,MAAA,QAAQ,EAAEG;AAAtF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjBD;;GAAMJ,a;UAGaH,W;;;KAHbG,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { Container, SwitchButton,Label } from './styles';\n\nimport { useDispatch } from 'react-redux';\nimport { changeToDark, changeToLight } from '../../store/Theme/Theme.actions';\n\nconst ThemeSwitcher: React.FC = () => {\n  const [isChecked, setIsChecked] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const handleThemeChange = (event:boolean) => {\n    setIsChecked(!isChecked);\n    event ? dispatch(changeToDark()) : dispatch(changeToLight());\n  };\n\n  return (\n    <Container>\n      <Label>Light</Label>\n        <SwitchButton checked={isChecked} uncheckedIcon={false} checkedIcon={false} onChange={handleThemeChange}/>\n      <Label>Dark</Label>\n    </Container>\n )\n};\n\nexport default ThemeSwitcher;\n"]},"metadata":{},"sourceType":"module"}